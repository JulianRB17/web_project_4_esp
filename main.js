!function(){"use strict";function e(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var t=function(){function t(e,n,o,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._handleLikeBtn(),this._handleCardClick(),this._userInfo=e.getUserInfo(),this._apiHandler=n,this._popupWithConfirmation=o,this._popupWithImage=r}var n,o;return n=t,o=[{key:"_handleLikeBtn",value:function(){var e=this;document.querySelector(".cards").addEventListener("click",(function(t){t.target.classList.contains("cards__like-btn")&&(t.target.classList.toggle("cards__like-btn_active"),e._apiHandler.toggleLikeBtn(t.target).then((function(e){return t.target.closest(".cards__like-container").querySelector(".cards__like-number").textContent=e.likes.length})).catch((function(e){return console.error(e)})))}))}},{key:"_handleCardClick",value:function(){var e=this,t=document.querySelector("#popup-pic");document.querySelector(".cards").addEventListener("click",(function(n){var o=n.target.closest(".cards__img");o&&(e._popupWithImage.openPopup(),t.querySelector(".popup__pic").src=o.src,t.querySelector(".popup__pic").alt=o.alt,t.querySelector(".popup__pic-name").textContent=o.alt)}))}},{key:"getTemplate",value:function(e){var t=e.name,n=e.link,o=e._id,r=e.likes,i=document.querySelector("#cards__template").content.cloneNode(!0);return i.querySelector(".cards__name").textContent=t,i.querySelector(".cards__img").alt=t,i.querySelector(".cards__img").src=n,i.querySelector(".cards__like-number").textContent=r.length,i.querySelector(".cards__card-container").id=o,i}},{key:"_handleLikeToggle",value:function(e,t){this._userInfo.then((function(n){e.forEach((function(e){e._id===n._id&&t.classList.add("cards__like-btn_active")}))}))}},{key:"_handleTrashButton",value:function(e,t){var n=this;this._userInfo.then((function(o){o._id!==e._id&&(t.style.display="none"),t.addEventListener("click",(function(e){return n._popupWithConfirmation.openPopup(e.target)}))}))}}],o&&e(n.prototype,o),Object.defineProperty(n,"prototype",{writable:!1}),t}();function n(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var o=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popupWindow=t}var t,o;return t=e,(o=[{key:"openPopup",value:function(){this._popupWindow.classList.add("popup_opened"),this._handleEscClose()}},{key:"_closePopup",value:function(){this._popupWindow.classList.remove("popup_opened")}},{key:"_handleEscClose",value:function(){var e=this;document.addEventListener("keydown",(function t(n){"Escape"===n.key&&(e._closePopup(),document.removeEventListener("keydown",t))}))}},{key:"_setEventListeners",value:function(){var e=this;this._popupWindow.querySelector(".popup__close-btn").addEventListener("click",(function(){e._closePopup()})),this._popupWindow.querySelector(".popup__overlay").addEventListener("click",(function(){e._closePopup()}))}}])&&n(t.prototype,o),Object.defineProperty(t,"prototype",{writable:!1}),e}();function r(e){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},r(e)}function i(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function u(){return u="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var o=c(e,t);if(o){var r=Object.getOwnPropertyDescriptor(o,t);return r.get?r.get.call(arguments.length<3?e:n):r.value}},u.apply(this,arguments)}function c(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=s(e)););return e}function a(e,t){return a=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},a(e,t)}function p(e,t){if(t&&("object"===r(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function s(e){return s=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},s(e)}var l=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&a(e,t)}(l,e);var t,n,o,r,c=(o=l,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=s(o);if(r){var n=s(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return p(this,e)});function l(e,t,n,o,r){var i;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,l),(i=c.call(this,e))._setEventListeners(),i._formValidator=o({formSelector:".popup__input-container",inputSelector:".popup__input",submitButtonSelector:".popup__save-btn",inactiveButtonClass:"popup__save-btn_inactive",errorClass:"popup__input-error_active"},i._popupWindow),i._popupProfile=document.querySelector("#edit-profile"),i._popupNewPlace=document.querySelector("#new-place"),i._popupProfilePic=document.querySelector("#profile-pic"),i._userInfo=t,i._apiHandler=n,i._newCard=r,i}return t=l,(n=[{key:"openPopup",value:function(){u(s(l.prototype),"openPopup",this).call(this),this._formValidator.resetValidation(),this._userInfo.setUserInfo()}},{key:"_getInputValues",value:function(){this._popupWindow===this._popupProfile&&(this._popupInputName=document.querySelector("#popup__input_name").value,this._popupInputAboutMe=document.querySelector("#popup__input_about-me").value,this._userInfo.name=this._popupInputName,this._userInfo.about=this._popupInputAboutMe),this._popupWindow===this._popupNewPlace&&(this._popupInputNewPlacePic=document.querySelector("#popup__input_new-place-pic").value,this._popupInputnewPlaceTitle=document.querySelector("#popup__input_new-place-title").value),this._popupWindow===this._popupProfilePic&&(this._popupInputProfilePic=document.querySelector("#popup__input_profile-pic").value)}},{key:"_setEventListeners",value:function(){var e=this;this._popupWindow.addEventListener("submit",(function(t){if(t.preventDefault(),e._getInputValues(),e._popupWindow.querySelector(".popup__save-btn").textContent="Guardando...",e._popupWindow===e._popupNewPlace&&e._apiHandler.setNewPlace(e).then((function(t){var n=[t];e._newCard.addItem(n),e._newCard.renderItems()})).catch((function(e){return console.log(e)})).finally((function(t){e._closePopup(),e._popupWindow.querySelector(".popup__save-btn").textContent="Crear"})),e._popupWindow===e._popupProfile){var n=document.querySelector(".profile__name"),o=document.querySelector(".profile__about-me");n.textContent=e._userInfo.name,o.textContent=e._userInfo.about,e._apiHandler.changeUserInfo(e).catch((function(e){return console.log(e)})).finally((function(t){e._closePopup(),e._popupWindow.querySelector(".popup__save-btn").textContent="Guardar"}))}if(e._popupWindow===e._popupProfilePic){var r=document.querySelector(".profile__pic");e._apiHandler.setProfilePic(e._popupInputProfilePic).then((function(e){return r.style.backgroundImage="url(".concat(e.avatar,")")})).catch((function(e){return console.log(e)})).finally((function(t){e._closePopup(),e._popupWindow.querySelector(".popup__save-btn").textContent="Guardar"}))}})),u(s(l.prototype),"_setEventListeners",this).call(this)}},{key:"_closePopup",value:function(){u(s(l.prototype),"_closePopup",this).call(this),this._popupWindow.querySelectorAll(".popup__input").forEach((function(e){e.value=""}))}}])&&i(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),l}(o);function f(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var d=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{headers:{authorization:"793ccaf5-d27e-4116-b328-f4d0925cd1fb","Content-Type":"application/json"}};f(this,e),this._baseUrl="https://around.nomoreparties.co/v1/web_es_cohort_02/",this._options=t}var t,n;return t=e,(n=[{key:"_fetchData",value:function(){return fetch(this._baseUrl+this._specificUrl,this._options).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))})).catch((function(e){return console.error(e)}))}},{key:"getUserInfo",value:function(){return this._specificUrl="users/me",this._options.method="GET",delete this._options.body,this._fetchData()}},{key:"toggleLikeBtn",value:function(e){var t=e.closest(".cards__card-container");return this._specificUrl="/cards/likes/".concat(t.id," "),this._options.method=e.classList.contains("cards__like-btn_active")?"PUT":"DELETE",delete this._options.body,this._fetchData()}},{key:"deleteCard",value:function(e){var t=e.closest(".cards__card-container");return this._specificUrl="/cards/".concat(t.id," "),this._options.method="DELETE",delete this._options.body,this._fetchData()}},{key:"setNewPlace",value:function(e){return this._specificUrl="/cards",this._options.method="POST",this._options.body=JSON.stringify({name:e._popupInputnewPlaceTitle,link:e._popupInputNewPlacePic}),this._fetchData()}},{key:"changeUserInfo",value:function(e){return this._specificUrl="users/me",this._options.method="PATCH",this._options.body=JSON.stringify({name:e._popupInputName,about:e._popupInputAboutMe}),this._fetchData()}},{key:"getInitialCards",value:function(){return this._specificUrl="cards",this._options.method="GET",delete this._options._body,this._fetchData()}},{key:"setInitialCards",value:function(){var e=this;this.getUserInfo().then((function(t){return e.getInitialCardsApi().then((function(e){return{cardData:e,userData:t}}))})).then((function(e){newCards(e.cardData,e.userData).renderItems()}))}},{key:"setProfilePic",value:function(e){return this._specificUrl="users/me/avatar",this._options.method="PATCH",this._options.body=JSON.stringify({avatar:e}),this._fetchData()}}])&&_(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),y=new d;function h(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var v=function(){function e(t,n){var o=t.items,r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=o,this._renderer=r,this._container=n}var t,n;return t=e,(n=[{key:"renderItems",value:function(){var e=this;this._items.forEach((function(t){var n=e._renderer(t);return e._container.prepend(n),n}))}},{key:"addItem",value:function(e){this._items=e}}])&&h(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function b(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var m=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._apiHandler=t,this.getUserInfo()}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return this._apiHandler.getUserInfo().then((function(e){return document.querySelector(".profile__name").textContent=e.name,document.querySelector(".profile__about-me").textContent=e.about,document.querySelector(".profile__pic").style.backgroundImage="url(".concat(e.avatar,")"),e})).catch((function(e){return console.error(e)}))}},{key:"setUserInfo",value:function(){this.getUserInfo().then((function(e){var t=document.querySelector("#popup__input_name"),n=document.querySelector("#popup__input_about-me"),o=document.querySelector("#popup__input_profile-pic");t.value=e.name,n.value=e.about,o.value=e.avatar})).catch((function(e){return console.error(e)}))}}])&&b(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function w(e){return w="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},w(e)}function g(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function S(e,t){return S=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},S(e,t)}function P(e,t){if(t&&("object"===w(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return k(e)}function k(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function E(){return E="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var o=O(e,t);if(o){var r=Object.getOwnPropertyDescriptor(o,t);return r.get?r.get.call(arguments.length<3?e:n):r.value}},E.apply(this,arguments)}function O(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=C(e)););return e}function C(e){return C=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},C(e)}var I=document.querySelector("#popup-erase-card"),q=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&S(e,t)}(u,e);var t,n,o,r,i=(o=u,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=C(o);if(r){var n=C(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return P(this,e)});function u(e){var t,n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,I))._popupEraseCardWindow=I,n._setEventListeners(),E((t=k(n),C(u.prototype)),"_setEventListeners",t).call(t),n._apiHandler=e,n}return t=u,(n=[{key:"openPopup",value:function(e){E(C(u.prototype),"openPopup",this).call(this),this._card=e.closest(".cards__card-container")}},{key:"_setEventListeners",value:function(){var e=this;this._popupEraseCardWindow.addEventListener("submit",(function(t){t.preventDefault(),e._popupEraseCardWindow.querySelector(".popup__save-btn").textContent="Guardando...",e._eraseCard()}))}},{key:"_eraseCard",value:function(){var e=this;this._card.remove(),this._apiHandler.deleteCard(this._card).catch((function(e){return console.log(e)})).finally((function(){e._closePopup(),e._popupEraseCardWindow.querySelector(".popup__save-btn").textContent="Sí"}))}}])&&g(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(o);function j(e){return j="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},j(e)}function L(e,t){return L=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},L(e,t)}function W(e,t){if(t&&("object"===j(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return T(e)}function T(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function R(){return R="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var o=B(e,t);if(o){var r=Object.getOwnPropertyDescriptor(o,t);return r.get?r.get.call(arguments.length<3?e:n):r.value}},R.apply(this,arguments)}function B(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=D(e)););return e}function D(e){return D=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},D(e)}var x=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&L(e,t)}(i,e);var t,n,o,r=(n=i,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=D(n);if(o){var r=D(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return W(this,e)});function i(){var e,t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,i),R((e=T(t=r.call(this,document.querySelector("#popup-pic"))),D(i.prototype)),"_setEventListeners",e).call(e),t}return t=i,Object.defineProperty(t,"prototype",{writable:!1}),t}(o);function U(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var N=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popupWindow=n,this._formSelector=t.formSelector,this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._errorClass=t.errorClass,this._formElement=this._popupWindow.querySelector(this._formSelector),this._inputList=Array.from(this._popupWindow.querySelectorAll(this._inputSelector)),this._buttonElement=this._popupWindow.querySelector(this._submitButtonSelector),this.enableValidation()}var t,n;return t=e,(n=[{key:"_showInputError",value:function(e){var t=this._popupWindow.querySelector("#".concat(e.id,"-error"));this._popupWindow.querySelector("#".concat(e.id,"-underline")).classList.add("popup__input-underline_error"),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}},{key:"_hideInputError",value:function(e){var t=this._popupWindow.querySelector("#".concat(e.id,"-error"));this._popupWindow.querySelector("#".concat(e.id,"-underline")).classList.remove("popup__input-underline_error"),t.textContent="",t.classList.remove(this._errorClass)}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}},{key:"_toggleSaveButtonState",value:function(){this._hasInvalidInput(this._inputList)?(this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.setAttribute("disabled","")):(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.removeAttribute("disabled",""))}},{key:"_setEventListeners",value:function(){var e=this;this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleSaveButtonState()}))}))}},{key:"enableValidation",value:function(){this._formElement.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}},{key:"resetValidation",value:function(){var e=this;this._inputList.forEach((function(t){e._hideInputError(t)})),this._toggleSaveButtonState()}}])&&U(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),H=function(e,t){return new N(e,t)},A=new m(y),V=new t(A,y,new q(y),new x),G=new v({items:[],renderer:function(e){var t=V.getTemplate(e);return V._handleTrashButton(e.owner,t.querySelector(".cards__trash-btn")),V._handleLikeToggle(e.likes,t.querySelector(".cards__like-btn")),t}},document.querySelector(".cards"));y.getInitialCards().then((function(e){G.addItem(e),G.renderItems()}));var M=new l(document.querySelector("#new-place"),A,y,H,G),J=new l(document.querySelector("#profile-pic"),A,y,H),z=new l(document.querySelector("#edit-profile"),A,y,H);document.querySelector(".profile__edit-btn").addEventListener("click",(function(){z.openPopup()})),document.querySelector(".profile__add-btn").addEventListener("click",(function(){M.openPopup()})),document.querySelector(".profile__pic").addEventListener("click",(function(){J.openPopup()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,